# basic info
CMAKE_MINIMUM_REQUIRED(VERSION 3.1.0)
PROJECT(scatter CXX)
SET(CMAKE_CXX_STANDARD 14)

# directories
SET(CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

# rpath
SET(CMAKE_INSTALL_RPATH "${CMAKE_LIBRARY_OUTPUT_DIRECTORY}")
IF(RPATH)
    SET(CMAKE_INSTALL_RPATH "${RPATH}:${CMAKE_INSTALL_RPATH}")
ENDIF(RPATH)
SET(CMAKE_SKIP_BUILD_RPATH  FALSE)
SET(CMAKE_INSTALL_RPATH_USE_LINK_PATH TRUE)
SET(CMAKE_BUILD_WITH_INSTALL_RPATH TRUE)

# openmp
FIND_PACKAGE(OpenMP)
IF(OpenMP_FOUND)
    MESSAGE(STATUS "OpenMp found")
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
ELSE (OpenMP_FOUND)
    MESSAGE(STATUS "OpenMP not found")
ENDIF(OpenMP_FOUND)

# MPI
FIND_PACKAGE(MPI REQUIRED)
IF(MPI_FOUND)
    MESSAGE(STATUS "MPI found: ${MPI_COMPILER}")
ELSE (MPI_FOUND)
    MESSAGE(STATUS "MPI not found")
ENDIF(MPI_FOUND)

# Boost
FIND_PACKAGE(Boost 1.50.0 REQUIRED 
				COMPONENTS program_options filesystem)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})
SET(CMAKE_INSTALL_RPATH "${Boost_LIBRARY_DIRS}:${CMAKE_INSTALL_RPATH}")

# debug/release
IF(DEBUG)
    SET(CMAKE_BUILD_TYPE Debug)
    MESSAGE(STATUS "version: debug")
	ADD_DEFINITIONS(-D_DEBUG=${DEBUG})
ELSE(DEBUG)
    SET(CMAKE_BUILD_TYPE Release)
    MESSAGE(STATUS "version: release")
	ADD_DEFINITIONS(-D_RELEASE)
ENDIF(DEBUG)

ADD_SUBDIRECTORY(rem)
ADD_SUBDIRECTORY(surfaces)
ADD_SUBDIRECTORY(grid)
ADD_SUBDIRECTORY(simulation)
ADD_SUBDIRECTORY(io)
ADD_SUBDIRECTORY(run)

# scatter
SET(OBJNAME scatter)
FILE(GLOB ${OBJNAME}_SRC *.cpp)
SET(${OBJNAME}_LIB rem surfaces grid simulation io run)
ADD_EXECUTABLE(${OBJNAME} ${${OBJNAME}_SRC})
TARGET_LINK_LIBRARIES(${OBJNAME} PUBLIC ${${OBJNAME}_LIB})
TARGET_INCLUDE_DIRECTORIES(${OBJNAME} PUBLIC ${CMAKE_SOURCE_DIR}/include)
